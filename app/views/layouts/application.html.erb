<!DOCTYPE html>
<html>
<head>
  <title>FlightLogger Mini</title>
  <%= csrf_meta_tags %>
  <%= csp_meta_tag %>

  <%= stylesheet_link_tag "application", media: "all", "data-turbo-track": "reload" %>
  <%= stylesheet_link_tag "flight-info-styles", media: "all", "data-turbo-track": "reload" %>
  <%= stylesheet_link_tag "side-panel-styles", media: "all", "data-turbo-track": "reload" %>
  <%= javascript_importmap_tags %>

  <script>
      function adjustETA(flightId, minutes) {
          // Make a PATCH request to update the ETA
          fetch(`/flights/${flightId}/update_eta`, {
              method: 'PATCH',
              headers: {
                  'Content-Type': 'application/x-www-form-urlencoded',
                  'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content'),
                  'Accept': 'text/vnd.turbo-stream.html'
              },
              body: `minutes=${minutes}`
          })
              .then(response => {
                  console.log('Response status:', response.status);
                  console.log('Response headers:', response.headers.get('content-type'));

                  if (!response.ok) {
                      throw new Error('Network response was not ok');
                  }
                  return response.text();
              })
              .then(html => {
                  console.log('Received HTML:', html);
                  // Turbo will automatically handle the stream response
                  if (html.trim()) {
                      Turbo.renderStreamMessage(html);
                  } else {
                      console.warn('Received empty response');
                  }
              })
              .catch(error => {
                  console.error('Error updating ETA:', error);
              });
      }

      // Alternative simpler approach using Rails UJS if you prefer
      function adjustETASimple(flightId, minutes) {
          const form = document.createElement('form');
          form.method = 'PATCH';
          form.action = `/flights/${flightId}/update_eta`;
          form.style.display = 'none';

          const csrfToken = document.querySelector('meta[name="csrf-token"]').getAttribute('content');
          const csrfInput = document.createElement('input');
          csrfInput.type = 'hidden';
          csrfInput.name = 'authenticity_token';
          csrfInput.value = csrfToken;

          const minutesInput = document.createElement('input');
          minutesInput.type = 'hidden';
          minutesInput.name = 'minutes';
          minutesInput.value = minutes;

          form.appendChild(csrfInput);
          form.appendChild(minutesInput);
          document.body.appendChild(form);

          form.submit();
          document.body.removeChild(form);
      }
  </script>
</head>

<body>
<%= render 'lessons/header_nav' %>

<main>
  <%= render 'lessons/side_panel' %>
  <div id="tab-panel" data-controller="tabs">
    <div class="tab-buttons">
      <button data-tabs-target="button" data-action="click->tabs#switchTab" data-tab="briefing" class="active">Briefing</button>
      <button data-tabs-target="button" data-action="click->tabs#switchTab" data-tab="goals">Goals</button>
      <button data-tabs-target="button" data-action="click->tabs#switchTab" data-tab="flight-info">Flight Info</button>
      <button data-tabs-target="button" data-action="click->tabs#switchTab" data-tab="flights">Flights</button>
    </div>

    <section data-tabs-target="content" data-tab="briefing">
      <%= render 'lessons/briefing' %>
    </section>

    <section data-tabs-target="content" data-tab="goals" hidden>
      <%= render 'lessons/goals' %>
    </section>

    <section data-tabs-target="content" data-tab="flight-info" hidden>
      <%= render 'flights/flight_info' %>
    </section>

    <section data-tabs-target="content" data-tab="flights" hidden>
      <%= render 'flights/flights_table' %>
    </section>
  </div>
</main>
</body>
</html>